#!/bin/bash -e

. settings

require_fullversion

FLAVOR=$1

if [[ $FLAVOR != deb ]] && [[ $FLAVOR != rpm ]] ; then
	echo "Usage: $0 [deb|rpm]" >&2
	exit 1
fi

REMOTE_BRANCH="${FLAVOR}/${FOREMAN_VERSION}"
FULL_REMOTE_BRANCH="$PACKAGING_GIT_REMOTE/$REMOTE_BRANCH"

if [[ $GIT_USE_WORKTREES == true ]] ; then
	RELEASE_PACKAGING_DIR="${PACKAGING_DIR}/${FLAVOR}-$VERSION"

	if [[ ! -d "$RELEASE_PACKAGING_DIR" ]] ; then
		(
			cd "${PACKAGING_DIR}/master"
			git worktree add "$RELEASE_PACKAGING_DIR" "$PACKAGING_GIT_REMOTE/$REMOTE_BRANCH"
		)
	fi
else
	RELEASE_PACKAGING_DIR="${PACKAGING_DIR}"

	if [[ ! -d "$RELEASE_PACKAGING_DIR" ]] ; then
		git clone --quiet --origin "$PACKAGING_GIT_REMOTE" https://github.com/theforeman/foreman-packaging "${RELEASE_PACKAGING_DIR}"
	fi
fi

cd "$RELEASE_PACKAGING_DIR"

git fetch $PACKAGING_GIT_REMOTE
git checkout -b "${FLAVOR}/release-$PROJECT-$FULLVERSION" "${FULL_REMOTE_BRANCH}"

if [[ $FLAVOR == deb ]] ; then
	scripts/changelog.rb -v "${FULLVERSION/-rc/~rc}-1" -m "$FULLVERSION released" debian/*/*/changelog
	git add debian/*/*/changelog
else
	if [[ $FULLVERSION == *-rc* ]]; then
		PRERELEASE=${FULLVERSION##*-}
		obal update --version "${FULLVERSION%%-rc*}" --prerelease "${PRERELEASE}" --release keep "${RPM_PACKAGES[@]}"
	else
		obal update --version "${FULLVERSION}" "${RPM_PACKAGES[@]}"
	fi

	git add "${RPM_PACKAGES[@]/#/packages\/${PROJECT}/}"
fi

git commit -m "Release $FULLVERSION"

if [[ $PACKAGING_PR == true ]] ; then
	# Create deterministic branch name
	FEATURE_BRANCH="release-$FLAVOR-$PROJECT-$FULLVERSION"

	# Ensure fork exists with configured remote name
	gh repo fork theforeman/foreman-packaging --remote-name "$PACKAGING_FORK_REMOTE"

	# Push to fork with deterministic branch name
	git push "$PACKAGING_FORK_REMOTE" "HEAD:$FEATURE_BRANCH"

	# Create PR with explicit source specification
	gh pr create --repo theforeman/foreman-packaging \
	             --title "Release $FULLVERSION" \
	             --head "$GITHUB_USER:$FEATURE_BRANCH" \
	             --base "$REMOTE_BRANCH" \
	             --body "Release $FULLVERSION"
else
	git push "$PACKAGING_GIT_REMOTE" "HEAD:$REMOTE_BRANCH"
fi
